# This is a basic workflow to help you get started with Actions

name: Cloud_Computing_Project_Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CODE_ZIP: "cc_manage_lambda.zip" 
  VAULT_TOKEN: "hvs.Hfkxg6re5QTY8mK7dzibccGB"
  VAULT_URL: "http://54.86.229.209:8200/v1/credentials/tools/aws"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Run a multi-line script
  #       run: |
  #         cd Scripts
  #         sh docker_image_build.sh

  code_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Management lambda build
        run: |
          python3 Scripts/package.py
          ls -altr ./Python/bin/
      - name: Archive code zip
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CODE_ZIP }}
          path: Python/bin/${{ env.CODE_ZIP }}

  terraform_plan:
    needs: code_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CODE_ZIP }}

      - name: Get AWS Credentials from Vault
        run: |
          curl -H "X-Vault-Token: $VAULT_TOKEN" -X GET $VAULT_URL
          sed -i 's/<holder_access_key>/<new_holder_access_key>/g' Docker/Config_files/aws_config.yaml
          sed -i 's/<holder_secret_key>/<new_holder_secret_key>/g' Docker/Config_files/aws_config.yaml
      
      - name: Terraform plan with credentials from vault
        run: |
          mkdir -p Terraform/bin/
          mv ${{ env.CODE_ZIP }} Terraform/bin/
          cd Terraform
          terraform init
          terraform plan

# curl \
# -H "X-Vault-Token: $VAULT_TOKEN" \
# -X GET \
# http://54.86.229.209:8200/v1/credentials/tools/aws
  
  terraform_apply:
    needs: terraform_plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CODE_ZIP }}

      - name: Terraform apply with 
        run: |
          mkdir -p Terraform/bin/
          mv ${{ env.CODE_ZIP }} Terraform/bin/
          cd Terraform
          terraform init
          # terraform apply --auto-approve

